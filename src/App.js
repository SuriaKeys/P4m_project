import React, { useState, useEffect } from 'react';
import './styles.css';
import logoSplash from './assets/images/logo_splash.PNG';
import logoAbout from './assets/images/logo_about.png';


const apiKey = process.env.REACT_APP_CURRENTS_API_KEY;
// test forms
const donations = [
    { id: 1, title: "–î–æ–ø–æ–º–æ–≥–∞ 3-–π –û–®–ë", description: "–ó–±—ñ—Ä –Ω–∞ –¥—Ä–æ–Ω–∏ –¥–ª—è 3-—ó –û–®–ë", amountRaised: 12000, goal: 50000, link: "#" },
    { id: 2, title: "–ê–≤—Ç–æ–º–æ–±—ñ–ª—å –¥–ª—è 47-—ó –±—Ä–∏–≥–∞–¥–∏", description: "–ó–±—ñ—Ä –Ω–∞ –ø—ñ–∫–∞–ø –¥–ª—è 47 –û–ú–ë–†", amountRaised: 30000, goal: 70000, link: "#" }
];

const quotes = [
    "–ó–ê–î–û–ù–ê–¢–¨ –ù–ê –ú–ï–ù–ï!",
    "–†–∞–∑–æ–º –º–∏ —Å–∏–ª—å–Ω—ñ—à—ñ!",
    "–ù–µ –±—É–¥—å –±–∞–π–¥—É–∂–∏–º!",
    "–¢–≤–æ—è –¥–æ–ø–æ–º–æ–≥–∞ –≤–∞–∂–ª–∏–≤–∞!",
    "–¢–≤–æ—è –∫–æ–ø—ñ–π–∫–∞ —Å–ø–∞—Å–µ –∂–∏—Ç—Ç—è!",
    "–û–¥–∏–Ω - –≤ –ø–æ–ª—ñ –Ω–µ –≤–æ—ó–Ω!",
    "–ü—ñ–¥—Ç—Ä–∏–º–∞–π –∫–æ–∑–∞–∫—ñ–≤!",
    "–ù–∞—Ä–æ–¥ —Ç–∞ –ó–°–£ - –æ–¥–Ω–µ —Ü—ñ–ª–µ!",
    "–ù–∞–º –ë–æ–≥ –ø–æ–º–∞–≥–∞—î!",
    "–ü–æ–ª–µ –±–æ—è –æ–¥–Ω–µ —Ç–∞ –¥–ª—è –≤—Å—ñ—Ö!",
    "–•—Ç–æ –∑ –º–µ—á–µ–º –ø—Ä–∏–π–¥–µ, —Ç–æ–π —ñ –≤—ñ–¥ –º–µ—á–∞ –∑–ª—è–≥–Ω–µ!"
];

const SplashScreen = ({ onHide }) => {
    const [quote, setQuote] = useState("");

    useEffect(() => {
        setQuote(quotes[Math.floor(Math.random() * quotes.length)]);
        const timer = setTimeout(onHide, 3500);
        return () => clearTimeout(timer);
    }, [onHide]);

    return (
        <div className="splash-screen">
            <div className="splash-content">
            <img src={logoSplash} alt="Logo" className="logo" />
                <div className="quote">{quote}</div>
            </div>
        </div>
    );
};

const Navigation = () => (
    <nav className="nav">
        <ul className="nav__list">
            <li><a href="#home" className="nav__link active-link"><i className="ri-home-smile-2-line"></i></a></li>
            <li><a href="#about" className="nav__link"><i className="ri-user-line"></i></a></li>
            <li><a href="#projects" className="nav__link"><i className="ri-briefcase-line"></i></a></li>
            <li><a href="#contact" className="nav__link"><i className="ri-send-plane-line"></i></a></li>
        </ul>
    </nav>
);

const About = () => (
    <section className="section" id="about">
        <h1>–ü—Ä–æ –Ω–∞—Å</h1>
        <div className="about-logo">
        <img src={logoAbout} alt="Logo" className="about-logo-img" />
        </div>
        <p>PayForMe - —Ü–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∑–±–∏—Ä–∞–Ω–Ω—è –∫–æ—à—Ç—ñ–≤ –¥–ª—è –≤—ñ–π—Å—å–∫–æ–≤–∏—Ö –±—Ä–∏–≥–∞–¥ —Ç–∞ —ó—Ö–Ω—ñ—Ö –ø–æ—Ç—Ä–µ–±.</p>
        <p>–ù–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–∞–¥–∞—î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∫–æ–∂–Ω–æ–º—É –¥–æ–ª—É—á–∏—Ç–∏—Å—è –¥–æ –∑–±–æ—Ä—É –∫–æ—à—Ç—ñ–≤ —Ç–∞ –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–∏–º, —Ö—Ç–æ –Ω–∞–π–±—ñ–ª—å—à–µ –ø–æ—Ç—Ä–µ–±—É—î –¥–æ–ø–æ–º–æ–≥–∏. –ú–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ä–∞–∑–æ–º –º–∏ –º–æ–∂–µ–º–æ –∑—Ä–æ–±–∏—Ç–∏ –∑–Ω–∞—á—É—â–∏–π –≤–Ω–µ—Å–æ–∫ —É –ø–µ—Ä–µ–º–æ–≥—Éüíôüíõ</p>
    </section>
);

const Donations = () => (
    <section className="section" id="home">
        <h1>–ê–∫—Ç—É–∞–ª—å–Ω—ñ –∑–±–æ—Ä–∏</h1>
        {donations.map(donation => (
            <div className="donation-card" key={donation.id}>
                <h2>{donation.title}</h2>
                <p>{donation.description}</p>
                <p>–ó—ñ–±—Ä–∞–Ω–æ: {donation.amountRaised} / {donation.goal} –≥—Ä–Ω</p>
                <a href={donation.link} className="donation-link">–î–æ–ª—É—á–∏—Ç–∏—Å—è</a>
            </div>
        ))}
    </section>
);

const Contact = () => (
    <section className="section" id="contact">
        <h1>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞</h1>
    </section>
);

const Projects = () => {
    const [news, setNews] = useState([]);

    useEffect(() => {
        const fetchNews = async () => {
            if (!apiKey) {
                console.error("API –∫–ª—é—á –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
                return;
            }
            try {
                const response = await fetch(`https://api.currentsapi.services/v1/search?keywords=Ukraine&apiKey=${apiKey}`);
                if (!response.ok) throw new Error(`HTTP –ø–æ–º–∏–ª–∫–∞: ${response.status}`);
                const data = await response.json();
                setNews(data.news || []);
            } catch (error) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω:", error);
            }
        };
        fetchNews();
    }, []);

    return (
        <section className="section" id="projects">
            <h1>–ù–æ–≤–∏–Ω–∏ - Live</h1>
            <div id="news-container">
                {news.length > 0 ? news.map((article, index) => (
                    <div key={index} className="news-item">
                        {article.image && <img src={article.image} alt="" className="news-image" />}
                        <h2>{article.title}</h2>
                        <p>{article.description}</p>
                        <a href={article.url} target="_blank" rel="noopener noreferrer">–ß–∏—Ç–∞—Ç–∏ –±—ñ–ª—å—à–µ</a>
                    </div>
                )) : <p>–ù–æ–≤–∏–Ω–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.</p>}
            </div>
        </section>
    );
};

const App = () => {
    const [showSplash, setShowSplash] = useState(true);

    return (
        <div>
            {showSplash ? <SplashScreen onHide={() => setShowSplash(false)} /> : (
                <>
                    <Navigation />
                    <main className="container">
                        <Donations />
                        <About />
                        <Projects />
                        <Contact />
                    </main>
                </>
            )}
        </div>
    );
};

export default App;
